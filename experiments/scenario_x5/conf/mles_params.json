{
  "params": {
    "experiment": {
      "name": "default"
    },
    "device": "cuda",
    "model_type": "rnn",
    "trx_encoder": {
      "norm_embeddings": false,
      "embeddings_noise": 0.003,
      "embeddings": {
        "level_3": {"in": 200, "out": 16},
        "level_4": {"in": 800, "out": 16},
        "segment_id": {"in": 120, "out": 16}
      },
      "numeric_values": {
        "trn_sum_from_iss": "identity",
        "netto": "identity",
        "regular_points_received": "identity"
      }
    },
    "rnn": {
      "type": "gru",
      "hidden_size": 800,
      "bidir": false,
      "trainable_starter": "static"
    },
    "transf": {
      "train_starter": true,
      "shared_layers": false,
      "input_size": 16,
      "n_heads": 4,
      "dim_hidden": 64,
      "dropout": 0.01,
      "n_layers": 4,
      "use_positional_encoding": false,
      "max_seq_len": 800,
      "use_after_mask": false,
      "use_src_key_padding_mask": false
    },
    "use_normalization_layer": true,
    "lr_scheduler": {
      "step_size": 3,
      "step_gamma": 0.9025
    },
    "train": {
      "num_workers": 8,
      "batch_size": 256,
      "split_strategy": {
        "split_strategy": "SampleSlices",
        "split_count": 5,
        "cnt_min": 30,
        "cnt_max": 180
      },
      "sampling_strategy": "HardNegativePair",
      "trx_dropout": 0.01,
      "max_seq_len": 800,
      "neg_count": 9,
      "loss": "ContrastiveLoss",
      "margin": 0.5,
      "lr": 0.002,
      "weight_decay": 0.0,
      "all_time_shuffle": true,
      "n_epoch": 30,
      "_checkpoints": {
        "save_interval": 5,
        "n_saved": 1000,
        "dirname": "models/mles_checkpoints/",
        "filename_prefix": "mles",
        "create_dir": true
      }
    },
    "norm_scores": false,
    "valid": {
      "batch_size": 256,
      "num_workers": 16,
      "split_strategy": {
        "split_strategy": "SampleSlices",
        "split_count": 5,
        "cnt_min": 30,
        "cnt_max": 180
      },
      "max_seq_len": 800
    }
  },

  "save_model": true,
  "model_path": {
    "model": "models/mles_model.p",
    "only_encoder": true
  },

  "output": {
    "path": "data/mles_embeddings",
    "format": "pickle",
    "columns": ["client_id"]
  },

  "stats": {
    "path": "runs/mles_result.json"
  }

}