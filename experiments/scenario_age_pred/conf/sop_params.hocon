{
  data_module: {
    type: map
    setup: {
      col_id: client_id
      dataset_files: {
        data_path: "data/train_trx_file.parquet"
      }
      split_by: files
      valid_size: 0.05
      valid_split_seed: 42
    }
    train: {
      min_seq_len: 25
      augmentations: [
        [DropoutTrx, {trx_dropout: 0.01}]
      ]
      split_strategy: {
        split_strategy: "SampleSlices"
        split_count: 5
        cnt_min: 50
        cnt_max: 200
      }
      num_workers: 16
      batch_size: 64
    }
    valid: {
      augmentations: []
      split_strategy: {
        split_strategy: SampleSlices
        split_count: 5
        cnt_min: 50
        cnt_max: 200
      }
      num_workers: 16
      batch_size: 1024
    }
  }

  seed_everything: 42
  trainer: {
    gpus: 1
    auto_select_gpus: false

    max_epochs: 150

    deterministic: true
  }
  logger_name: sop_model

  params: {
    data_module_class: dltranz.data_load.data_module.sop_data_module.SopDataModuleTrain
    pl_module_class: dltranz.lightning_modules.sop_nsp_module.SopNspModule

    score_metric: auroc

    encoder_type: rnn
    rnn: {
      type: gru
      hidden_size: 800
      bidir: false
      trainable_starter: static
    }

    trx_encoder: {
      norm_embeddings: false
      embeddings_noise: 0.003
      embeddings: {
        small_group: {in: 250, out: 16}
      }
      numeric_values: {
        amount_rur: identity
      }
    }

    head: {
      hidden_size: 512
      drop_p: 0.5
      pred_all_states: false
    }

    lr_scheduler: {
      ReduceLROnPlateau: true
      patience: 15
    }

    train: {
      lr: 0.001
      weight_decay: 0.0
    }
  }

  model_path: "models/sop_model.p"

  include "dataset_inference_file.hocon"

  output: {
    path: data/sop_embeddings
    format: pickle
  }
}
